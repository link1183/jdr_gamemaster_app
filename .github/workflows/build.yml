name: Build and Release

jobs:
  # Verify build
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # Install Linux dependencies if on Linux
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev clang cmake pkg-config

      # Enable desktop builds
      - name: Enable desktop builds
        run: |
          flutter config --enable-windows-desktop
          flutter config --enable-linux-desktop

      # Build Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          flutter build windows --release
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../windows-release.zip *

      # Build Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          flutter build linux --release
          cd build/linux/x64/release/bundle
          zip -r ../../../../../linux-release.zip *

      # Upload Windows artifact
      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: windows-release.zip

      # Upload Linux artifact
      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: linux-release.zip

  # Create Release
  release:
    name: Create Release
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          name: Release v${{ inputs.version }}
          body: ${{ inputs.release_notes }}
          draft: false
          prerelease: false
          files: |
            windows-build/windows-release.zip
            linux-build/linux-release.zip

on:
  # Build verification on push to main
  push:
    branches: ["main"]

  # Manual release trigger
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g., 1.0.0)"
        required: true
        type: string
      release_notes:
        description: "Release notes"
        required: false
        type: string
        default: "No release notes provided"
